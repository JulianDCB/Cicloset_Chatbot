import streamlit as st
import time
import re

st.title("ğŸ’¬ Chatbot Cicloset")
st.write("Chatbot de preguntas frecuentes y recomendaciones de bolsos.")

# --- 1. Separar saludos y preguntas frecuentes en listas ---
saludos = [
    "hola", "buenos dÃ­as", "buenas tardes", "buenas noches", "hola, Â¿cÃ³mo estÃ¡s?",
    "buen dÃ­a", "quÃ© tal", "hey", "holi", "saludos", "buenas", "quÃ© onda", "hello"
]
respuestas_saludos = [
    "Â¡Hola! Bienvenido a Cicloset. Â¿En quÃ© puedo ayudarte hoy?",
    "Â¡Buenos dÃ­as! Gracias por visitarnos. Â¿Buscas algÃºn bolso en especial?",
    "Â¡Buenas tardes! Â¿Te gustarÃ­a ver nuestras recomendaciones de bolsos?",
    "Â¡Buenas noches! Si tienes dudas sobre nuestros productos, estoy aquÃ­ para ayudarte.",
    "Â¡Hola! Estoy muy bien, gracias por preguntar. Â¿En quÃ© puedo ayudarte hoy?",
    "Â¡Buen dÃ­a! Â¿Te gustarÃ­a ver nuestras novedades en bolsos?",
    "Â¡QuÃ© tal! Â¿Buscas algÃºn bolso en particular?",
    "Â¡Hey! Â¿Te ayudo a encontrar el bolso perfecto?",
    "Â¡Holi! Â¿Quieres una recomendaciÃ³n de bolso?",
    "Â¡Saludos! Â¿En quÃ© puedo ayudarte?",
    "Â¡Buenas! Â¿Buscas algo especial?",
    "Â¡QuÃ© onda! Â¿Te gustarÃ­a ver nuestras colecciones?",
    "Â¡Hello! Â¿Te ayudo a elegir un bolso?"
]

preguntas_frecuentes = [
    "Â¿CuÃ¡les son los mÃ©todos de pago?",
    "Â¿Hacen envÃ­os a todo el paÃ­s?",
    "Â¿CÃ³mo puedo rastrear mi pedido?",
    "Â¿Puedo cambiar o devolver un producto?",
    "Â¿CuÃ¡nto tarda el envÃ­o?",
    "Â¿Tienen garantÃ­a los productos?",
    "Â¿DÃ³nde estÃ¡n ubicados?"
]
respuestas_faq = [
    "Aceptamos tarjetas de crÃ©dito, dÃ©bito y pagos en efectivo.",
    "SÃ­, realizamos envÃ­os a toda Colombia.",
    "RecibirÃ¡s un correo con el enlace de rastreo despuÃ©s de tu compra.",
    "SÃ­, puedes cambiar o devolver tu producto dentro de los 30 dÃ­as posteriores a la compra.",
    "El envÃ­o tarda entre 2 y 5 dÃ­as hÃ¡biles dependiendo de tu ubicaciÃ³n.",
    "SÃ­, todos nuestros productos tienen garantÃ­a de 6 meses por defectos de fÃ¡brica.",
    "Nuestra tienda es 100% online, pero puedes contactarnos para mÃ¡s informaciÃ³n."
]

# --- 2. FunciÃ³n para normalizar texto (quitar tildes, mayÃºsculas, espacios y signos) ---
def normalizar(texto):
    texto = texto.lower()
    texto = re.sub(r'[Ã¡Ã Ã¤Ã¢]', 'a', texto)
    texto = re.sub(r'[Ã©Ã¨Ã«Ãª]', 'e', texto)
    texto = re.sub(r'[Ã­Ã¬Ã¯Ã®]', 'i', texto)
    texto = re.sub(r'[Ã³Ã²Ã¶Ã´]', 'o', texto)
    texto = re.sub(r'[ÃºÃ¹Ã¼Ã»]', 'u', texto)
    texto = re.sub(r'[^a-z0-9 ]', '', texto)
    texto = re.sub(r'\s+', ' ', texto).strip()
    return texto

# --- 3. Recomendaciones mejoradas por gustos, colores, marcas, estilos, ocasiones ---
def recomendar_bolso(gusto):
    gusto_norm = normalizar(gusto)
    # Colores
    colores = {
        "rojo": "Bolso Rojo PasiÃ³n",
        "azul": "Bolso Deportivo Azul",
        "negro": "Bolso Elegante Negro",
        "beige": "Bolso Casual Beige",
        "verde": "Bolso Verde Primavera",
        "blanco": "Bolso Blanco ClÃ¡sico"
    }
    for color, nombre in colores.items():
        if color in gusto_norm:
            return f"Te recomendamos el {nombre} de Cicloset. Â¡Es ideal para quienes aman el color {color}!"

    # Marcas
    if "louis vuitton" in gusto_norm:
        return "Tenemos bolsos inspirados en el estilo de Louis Vuitton. Â¿Te gustarÃ­a verlos?"
    if "carolina herrera" in gusto_norm:
        return "Nuestros bolsos tipo Carolina Herrera son perfectos para un look elegante y sofisticado."
    if "prada" in gusto_norm:
        return "Nuestros bolsos tipo Prada son sinÃ³nimo de lujo y estilo. Â¿Te gustarÃ­a verlos?"

    # Estilos
    if "deportivo" in gusto_norm:
        return "Te recomendamos el Bolso Deportivo Azul de Cicloset."
    if "elegante" in gusto_norm:
        return "Te recomendamos el Bolso Elegante Negro de Cicloset."
    if "casual" in gusto_norm:
        return "Te recomendamos el Bolso Casual Beige de Cicloset."
    if "formal" in gusto_norm:
        return "El Bolso Formal Negro es perfecto para eventos importantes."
    if "juvenil" in gusto_norm:
        return "El Bolso Juvenil Rosa es ideal para un look fresco y moderno."

    # Ocasiones especiales
    if "boda" in gusto_norm or "bautizo" in gusto_norm or "fiesta" in gusto_norm:
        return "Para ocasiones especiales como bodas o bautizos, te sugerimos el Bolso de Fiesta Plateado de Cicloset."
    if "trabajo" in gusto_norm:
        return "El Bolso Ejecutivo Negro es ideal para el trabajo y reuniones de negocios."
    if "universidad" in gusto_norm or "clases" in gusto_norm:
        return "El Bolso Mochila Cicloset es perfecto para la universidad o clases."

    return "Visita https://cicloset.com.co/ para ver todos nuestros bolsos y encuentra el que mÃ¡s te guste."

# --- 4. Mensaje de bienvenida para nuevos usuarios ---
if "messages" not in st.session_state:
    st.session_state.messages = []
    st.session_state.messages.append({
        "role": "assistant",
        "content": "Â¡Bienvenido a Cicloset! ğŸ˜Š\n\nGracias por visitarnos. Si tienes alguna pregunta sobre nuestros bolsos o quieres una recomendaciÃ³n personalizada, escrÃ­beme. TambiÃ©n puedes visitar nuestra tienda en [cicloset.com.co](https://cicloset.com.co/)."
    })

for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

if prompt := st.chat_input("Â¿En quÃ© te puedo ayudar?"):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # --- 5. Procesar la entrada del usuario ---
    prompt_norm = normalizar(prompt)
    respuesta = None

    # Buscar saludo
    for i, saludo in enumerate(saludos):
        if normalizar(saludo) == prompt_norm:
            respuesta = respuestas_saludos[i]
            break

    # Buscar pregunta frecuente si no es saludo
    if respuesta is None:
        for i, pregunta in enumerate(preguntas_frecuentes):
            if normalizar(pregunta) == prompt_norm:
                respuesta = respuestas_faq[i]
                break

    # Buscar recomendaciÃ³n por gustos si no es saludo ni FAQ
    if respuesta is None:
        if any(palabra in prompt_norm for palabra in ["bolso", "gusto", "color", "marca", "estilo", "ocasion", "boda", "bautizo", "fiesta", "trabajo", "universidad", "clases"]):
            respuesta = recomendar_bolso(prompt)
        else:
            respuesta = "Lo siento, no entiendo tu pregunta. Â¿Puedes reformularla? O visita nuestra tienda en [cicloset.com.co](https://cicloset.com.co/) para mÃ¡s informaciÃ³n."

    # --- 6. Esperar entre 1 y 1.5 segundos antes de responder ---
    time.sleep(1.2)

    # --- 7. AÃ±adir seguimiento a la respuesta ---
    respuesta += "\n\nÂ¿Te puedo ayudar en algo mÃ¡s?"

    with st.chat_message("assistant"):
        st.markdown(respuesta)
    st.session_state.messages.append({"role": "assistant", "content": respuesta})
